{"name": "Get pet by invalid ID", "status": "failed", "statusDetails": {"message": "AssertionError: Unexpected error message: b'{\"code\":400,\"message\":\"Input error: couldn\\'t convert `one` to type `class java.lang.Long`\"}' instead of Invalid ID supplied", "trace": "self = <tests.test_get_pet.TestGetPet object at 0x106233010>\n\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.title(\"Get pet by invalid ID\")\n    def test_get_pet_by_invalid_id(self):\n        response = MyRequests.get(f\"/pet/one\")\n    \n        Assertions.assert_code_status(response, 400)\n>       Assertions.assert_error_message(response, \"Invalid ID supplied\")\n\ntests/test_get_pet.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_error_message = 'Invalid ID supplied'\n\n    @staticmethod\n    @allure.step(\"Check the server returns error message '{expected_error_message}'\")\n    def assert_error_message(response: Response, expected_error_message):\n>       assert response.content.decode() == expected_error_message, \\\n            f\"Unexpected error message: {response.content} instead of {expected_error_message}\"\nE       AssertionError: Unexpected error message: b'{\"code\":400,\"message\":\"Input error: couldn\\'t convert `one` to type `class java.lang.Long`\"}' instead of Invalid ID supplied\n\nlib/assertions.py:46: AssertionError"}, "steps": [{"name": "GET request to URL '/pet/one'", "status": "passed", "start": 1744657923292, "stop": 1744657923302}, {"name": "Check status code is 400", "status": "passed", "parameters": [{"name": "response", "value": "<Response [400]>"}, {"name": "expected_status_code", "value": "400"}], "start": 1744657923302, "stop": 1744657923302}, {"name": "Check the server returns error message ''Invalid ID supplied''", "status": "failed", "statusDetails": {"message": "AssertionError: Unexpected error message: b'{\"code\":400,\"message\":\"Input error: couldn\\'t convert `one` to type `class java.lang.Long`\"}' instead of Invalid ID supplied\n", "trace": "  File \"/Users/miowch/.pyenv/versions/n26_nastia_kuzina/lib/python3.10/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/Users/miowch/Documents/GitHub/nastia-kuzina/Task3/api-e2e-tests/lib/assertions.py\", line 46, in assert_error_message\n    assert response.content.decode() == expected_error_message, \\\n"}, "parameters": [{"name": "response", "value": "<Response [400]>"}, {"name": "expected_error_message", "value": "'Invalid ID supplied'"}], "start": 1744657923302, "stop": 1744657923302}], "start": 1744657923292, "stop": 1744657923302, "uuid": "3101220b-4979-4673-9cad-24d0e46fcd84", "historyId": "2080646c88aeeeacc5684328842465bc", "testCaseId": "2080646c88aeeeacc5684328842465bc", "fullName": "tests.test_get_pet.TestGetPet#test_get_pet_by_invalid_id", "labels": [{"name": "severity", "value": "normal"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_get_pet"}, {"name": "subSuite", "value": "TestGetPet"}, {"name": "host", "value": "iMac.local"}, {"name": "thread", "value": "58784-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_get_pet"}]}