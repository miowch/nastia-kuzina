{"name": "Create pet with all data", "status": "failed", "statusDetails": {"message": "Failed: Soft assertion failures:\nResponse JSON doesn't have key 'category\nPet tags differ from expected ones", "trace": "self = <tests.test_add_pet.TestAddPet object at 0x106231900>\n\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.title(\"Create pet with all data\")\n    def test_add_pet(self):\n        failed_assertions = []\n        data = self.prepare_pet_creation_data()\n    \n        response = MyRequests.post(\n            \"/pet/\",\n            data=data)\n    \n        Assertions.assert_code_status(response, 200)\n        try:\n            Assertions.assert_json_value_by_key(\n                response, \"id\", data[\"id\"], error_message=\"Pet ID differs from expected one\")\n        except AssertionError as e:\n            failed_assertions.append(str(e))\n        try:\n            Assertions.assert_json_value_by_key(\n                response, \"name\", data[\"name\"], error_message=\"Pet name differs from expected one\")\n        except AssertionError as e:\n            failed_assertions.append(str(e))\n        try:\n            Assertions.assert_json_value_by_key(\n                response, \"category\", data[\"category\"], error_message=\"Pet category differs from expected one\")\n        except AssertionError as e:\n            failed_assertions.append(str(e))\n        try:\n            Assertions.assert_json_value_by_key(\n                response, \"photoUrls\", data[\"photoUrls\"], error_message=\"Photo URLs differ from expected ones\")\n        except AssertionError as e:\n            failed_assertions.append(str(e))\n        try:\n            Assertions.assert_json_value_by_key(\n                response, \"tags\", data[\"tags\"], error_message=\"Pet tags differ from expected ones\")\n        except AssertionError as e:\n            failed_assertions.append(str(e))\n        try:\n            Assertions.assert_json_value_by_key(\n                response, \"status\", data[\"status\"], error_message=\"Pet status differs from expected ones\")\n        except AssertionError as e:\n            failed_assertions.append(str(e))\n        if failed_assertions:\n>           pytest.fail(\"Soft assertion failures:\\n\" +\n                        \"\\n\".join(failed_assertions))\nE           Failed: Soft assertion failures:\nE           Response JSON doesn't have key 'category\nE           Pet tags differ from expected ones\n\ntests/test_add_pet.py:99: Failed"}, "steps": [{"name": "Prepare pet creation data", "status": "passed", "start": 1744657922878, "stop": 1744657922878}, {"name": "POST request to URL '/pet/'", "status": "passed", "start": 1744657922878, "stop": 1744657922891}, {"name": "Check status code is 200", "status": "passed", "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "expected_status_code", "value": "200"}], "start": 1744657922891, "stop": 1744657922891}, {"name": "Check JSON contains 'id' = 36", "status": "passed", "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "key", "value": "'id'"}, {"name": "expected_value", "value": "36"}, {"name": "error_message", "value": "'Pet ID differs from expected one'"}], "start": 1744657922892, "stop": 1744657922892}, {"name": "Check JSON contains 'name' = 'Ryan'", "status": "passed", "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "key", "value": "'name'"}, {"name": "expected_value", "value": "'Ryan'"}, {"name": "error_message", "value": "'Pet name differs from expected one'"}], "start": 1744657922892, "stop": 1744657922892}, {"name": "Check JSON contains 'category' = {'id': 1, 'name': 'Dogs'}", "status": "failed", "statusDetails": {"message": "AssertionError: Response JSON doesn't have key 'category\n", "trace": "  File \"/Users/miowch/.pyenv/versions/n26_nastia_kuzina/lib/python3.10/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/Users/miowch/Documents/GitHub/nastia-kuzina/Task3/api-e2e-tests/lib/assertions.py\", line 14, in assert_json_value_by_key\n    assert key in response_as_dict, f\"Response JSON doesn't have key '{key}\"\n"}, "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "key", "value": "'category'"}, {"name": "expected_value", "value": "{'id': 1, 'name': 'Dogs'}"}, {"name": "error_message", "value": "'Pet category differs from expected one'"}], "start": 1744657922892, "stop": 1744657922892}, {"name": "Check JSON contains 'photoUrls' = ['string']", "status": "passed", "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "key", "value": "'photoUrls'"}, {"name": "expected_value", "value": "['string']"}, {"name": "error_message", "value": "'Photo URLs differ from expected ones'"}], "start": 1744657922892, "stop": 1744657922892}, {"name": "Check JSON contains 'tags' = [{'id': 0, 'name': 'tag1'}]", "status": "failed", "statusDetails": {"message": "AssertionError: Pet tags differ from expected ones\n", "trace": "  File \"/Users/miowch/.pyenv/versions/n26_nastia_kuzina/lib/python3.10/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/Users/miowch/Documents/GitHub/nastia-kuzina/Task3/api-e2e-tests/lib/assertions.py\", line 15, in assert_json_value_by_key\n    assert response_as_dict[key] == expected_value, error_message\n"}, "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "key", "value": "'tags'"}, {"name": "expected_value", "value": "[{'id': 0, 'name': 'tag1'}]"}, {"name": "error_message", "value": "'Pet tags differ from expected ones'"}], "start": 1744657922892, "stop": 1744657922892}, {"name": "Check JSON contains 'status' = 'available'", "status": "passed", "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "key", "value": "'status'"}, {"name": "expected_value", "value": "'available'"}, {"name": "error_message", "value": "'Pet status differs from expected ones'"}], "start": 1744657922892, "stop": 1744657922892}], "start": 1744657922878, "stop": 1744657922892, "uuid": "868700f4-2b41-414e-8fcd-784d0eb820bd", "historyId": "5b22805970ed587a37d39de38dcad6a6", "testCaseId": "5b22805970ed587a37d39de38dcad6a6", "fullName": "tests.test_add_pet.TestAddPet#test_add_pet", "labels": [{"name": "severity", "value": "normal"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_add_pet"}, {"name": "subSuite", "value": "TestAddPet"}, {"name": "host", "value": "iMac.local"}, {"name": "thread", "value": "58784-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_add_pet"}]}