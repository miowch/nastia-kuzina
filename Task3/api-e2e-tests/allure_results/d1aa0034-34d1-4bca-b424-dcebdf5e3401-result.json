{"name": "Try to create pet without required field", "status": "failed", "statusDetails": {"message": "AssertionError: Unexpected status code! Expected: 400. Actual: 200", "trace": "self = <tests_project.tests.test_add_pet.TestAddPet object at 0x7f8321dcd480>\nabsent_required_field = 'photoUrls'\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title(\"Try to create pet without required field\")\n    @pytest.mark.parametrize(\"absent_required_field\", absent_required_fields)\n    def test_add_pet_without_required_field(self, absent_required_field):\n        data = self.prepare_pet_creation_data()\n        data.pop(absent_required_field)\n    \n        response = MyRequests.post(\n            \"/pet/\",\n            data=data)\n    \n>       Assertions.assert_code_status(response, 400)\n\ntests/test_add_pet.py:118: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>, expected_status_code = 400\n\n    @staticmethod\n    @allure.step(\"Check status code is {expected_status_code}\")\n    def assert_code_status(response: Response, expected_status_code):\n>       assert response.status_code == expected_status_code, \\\n            f\"Unexpected status code! Expected: {expected_status_code}. Actual: {response.status_code}\"\nE       AssertionError: Unexpected status code! Expected: 400. Actual: 200\n\nlib/assertions.py:30: AssertionError"}, "steps": [{"name": "Prepare pet creation data", "status": "passed", "start": 1744662020477, "stop": 1744662020477}, {"name": "POST request to URL '/pet/'", "status": "passed", "start": 1744662020477, "stop": 1744662020486}, {"name": "Check status code is 400", "status": "failed", "statusDetails": {"message": "AssertionError: Unexpected status code! Expected: 400. Actual: 200\n", "trace": "  File \"/usr/local/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/tests_project/lib/assertions.py\", line 30, in assert_code_status\n    assert response.status_code == expected_status_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "expected_status_code", "value": "400"}], "start": 1744662020486, "stop": 1744662020486}], "parameters": [{"name": "absent_required_field", "value": "'photoUrls'"}], "start": 1744662020477, "stop": 1744662020487, "uuid": "e68fdd17-4a3b-40e2-9175-2c2526dd4b50", "historyId": "6305139543d2b3b806914be0aa237eb6", "testCaseId": "438b79b2555d600be606f1d8f8ed9ea6", "fullName": "tests.test_add_pet.TestAddPet#test_add_pet_without_required_field", "labels": [{"name": "severity", "value": "critical"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_add_pet"}, {"name": "subSuite", "value": "TestAddPet"}, {"name": "host", "value": "4c2631702ffc"}, {"name": "thread", "value": "7-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_add_pet"}]}