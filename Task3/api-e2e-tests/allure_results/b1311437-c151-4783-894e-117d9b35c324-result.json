{"name": "Try to update pet with invalid ID 2.5", "status": "failed", "statusDetails": {"message": "AssertionError: Unexpected status code! Expected: 400. Actual: 200", "trace": "self = <tests_project.tests.test_update_pet.TestUpdatePet object at 0x7f8321dbdbf0>\ninvalid_id = '2.5'\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title(\"Try to update pet with invalid ID {invalid_id}\")\n    @pytest.mark.parametrize(\"invalid_id\", invalid_ids)\n    def test_update_pet_with_invalid_id(self, invalid_id):\n        data = {\n            \"id\": invalid_id,\n            \"name\": self.fake.first_name(),\n            \"photoUrls\": [\"string\"]\n        }\n    \n        response = MyRequests.put(\n            \"/pet/\",\n            data)\n    \n>       Assertions.assert_code_status(response, 400)\n\ntests/test_update_pet.py:107: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>, expected_status_code = 400\n\n    @staticmethod\n    @allure.step(\"Check status code is {expected_status_code}\")\n    def assert_code_status(response: Response, expected_status_code):\n>       assert response.status_code == expected_status_code, \\\n            f\"Unexpected status code! Expected: {expected_status_code}. Actual: {response.status_code}\"\nE       AssertionError: Unexpected status code! Expected: 400. Actual: 200\n\nlib/assertions.py:30: AssertionError"}, "steps": [{"name": "PUT request to URL '/pet/'", "status": "passed", "start": 1744662021195, "stop": 1744662021203}, {"name": "Check status code is 400", "status": "failed", "statusDetails": {"message": "AssertionError: Unexpected status code! Expected: 400. Actual: 200\n", "trace": "  File \"/usr/local/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/tests_project/lib/assertions.py\", line 30, in assert_code_status\n    assert response.status_code == expected_status_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "expected_status_code", "value": "400"}], "start": 1744662021203, "stop": 1744662021203}], "parameters": [{"name": "invalid_id", "value": "'2.5'"}], "start": 1744662021195, "stop": 1744662021204, "uuid": "7a5ddcc3-f8b1-4cae-ab91-4279e0e753fb", "historyId": "c58ae70d5c7fb335a11a17354a51c939", "testCaseId": "dad9c3a12b4ea201599875acfbfa599e", "fullName": "tests.test_update_pet.TestUpdatePet#test_update_pet_with_invalid_id", "labels": [{"name": "severity", "value": "critical"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_update_pet"}, {"name": "subSuite", "value": "TestUpdatePet"}, {"name": "host", "value": "4c2631702ffc"}, {"name": "thread", "value": "7-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_update_pet"}]}